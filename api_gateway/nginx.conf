events {
    worker_connections 1024;
}

http {
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Timeouts
    keepalive_timeout 65;
    client_max_body_size 100M;

    # Server configuration
    server {
        listen 8000;
        server_name localhost;

        # Health check endpoint
        location /health {
            add_header Content-Type application/json;
            return 200 '{"status":"healthy","services":{"auth":"running","product":"running","order":"running","payment":"running"}}';
        }

        # Auth Service
        location /api/auth/ {
            proxy_pass http://auth_service:8000/api/auth/;
            proxy_set_header Host localhost;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 90;
        }

        location /api/users/ {
            proxy_pass http://auth_service:8000/api/users/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 90;
        }
        
        # Product Service
        location /api/products/ {
            proxy_pass http://product_service:8000/api/products/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 90;
        }

        # Media files from product service
        location /media/ {
            proxy_pass http://product_service:8000/media/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 90;
            # Tăng buffer size cho các file lớn
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            # Thêm các header cho caching (tuỳ chọn)
            expires 7d;
            add_header Cache-Control "public, max-age=604800";
        }

        # Thêm route cho Cart Service
        location /api/cart/ {
            proxy_pass http://cart_service:8000/api/cart/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Order Service
        location /api/orders/ {
            proxy_pass http://order_service:8000/api/orders/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 90;
        }

        # Payment Service (if present)
        location /api/payments/ {
            proxy_pass http://payment_service:8000/api/payments/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 90;
        }

        # Serve static files if needed
        location /static/ {
            root /var/www;
        }

        # Default route
        location / {
            return 404 '{"error":"Route not found"}';
            add_header Content-Type application/json;
        }
    }
}